# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import httpx._auth as module_0
import re as module_1
import httpx as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0._DigestAuthChallenge()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'PWz\xca\x02yX\xb2"\xf0g\xa9\xcbJ\xba\x83\xd7['
    function_auth_0 = module_0.FunctionAuth(bytes_0)
    assert (
        f"{type(function_auth_0).__module__}.{type(function_auth_0).__qualname__}"
        == "httpx._auth.FunctionAuth"
    )
    generator_0 = function_auth_0.sync_auth_flow(function_auth_0)
    module_1.Match(*generator_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "|)5oC-2&Zw@&t:,b"
    digest_auth_0 = module_2.DigestAuth(str_0, str_0)
    assert (
        f"{type(digest_auth_0).__module__}.{type(digest_auth_0).__qualname__}"
        == "httpx.DigestAuth"
    )
    generator_0 = digest_auth_0.sync_auth_flow(digest_auth_0)
    module_1.Match(*generator_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    function_auth_0 = module_0.FunctionAuth(none_type_0)
    assert (
        f"{type(function_auth_0).__module__}.{type(function_auth_0).__qualname__}"
        == "httpx._auth.FunctionAuth"
    )
    module_2.BasicAuth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    function_auth_0 = module_0.FunctionAuth(none_type_0)
    assert (
        f"{type(function_auth_0).__module__}.{type(function_auth_0).__qualname__}"
        == "httpx._auth.FunctionAuth"
    )
    module_2.NetRCAuth()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "status"
    digest_auth_0 = module_2.DigestAuth(str_0, str_0)
    assert (
        f"{type(digest_auth_0).__module__}.{type(digest_auth_0).__qualname__}"
        == "httpx.DigestAuth"
    )
    var_0 = module_1.escape(str_0)
    list_0 = []
    auth_0 = module_2.Auth(*list_0)
    generator_0 = auth_0.sync_auth_flow(var_0)
    module_1.Match(*generator_0)
